name: Build
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    strategy:
      matrix:
        circuit_name: [zkLogin, zkLoginSha256, idHashMapping]  # Add your circuit names here

    container:
      image: debian:bookworm

    steps:
      - name: Install deps
        run: |
          apt-get update
          apt-get install -y nlohmann-json3-dev libgmp-dev nasm build-essential zip curl

      - name: Prepare VERSION
        run: |
          echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download circom
        uses: supplypike/setup-bin@v4
        with:
          uri: "https://github.com/iden3/circom/releases/latest/download/circom-linux-amd64"
          name: "circom"
          version: "latest"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install node_modules
        run: npm install

      - name: Compile circuit
        run: |
          mkdir -p out
          circom circuits/${{ matrix.circuit_name }}.circom --r1cs --sym --json --wasm --c -l node_modules -o out

      - name: Build binary
        run: |
          cd out/${{ matrix.circuit_name }}_cpp
          make

      - name: Zip artifacts
        run: |
          mkdir -p zipfiles
          zip -j -r zipfiles/${{ matrix.circuit_name }}-${{ env.VERSION }}.zip \
          out/${{ matrix.circuit_name }}_js/${{ matrix.circuit_name }}.wasm \
          out/${{ matrix.circuit_name }}_cpp/${{ matrix.circuit_name }} \
          out/${{ matrix.circuit_name }}_cpp/${{ matrix.circuit_name }}.dat \
          out/${{ matrix.circuit_name }}.r1cs \
          out/${{ matrix.circuit_name }}.sym \
          out/${{ matrix.circuit_name }}_constraints.json

      - name: Upload zips to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zipfiles/${{ matrix.circuit_name }}-${{ env.VERSION }}.zip
          asset_name: ${{ matrix.circuit_name }}-${{ env.VERSION }}.zip
          tag: ${{ github.ref }}

      - name: Ceremony - Count number of constraints
        id: count_lines
        run: |
          raw_result=$(npx snarkjs ri out/${{ matrix.circuit_name }}.r1cs | grep '# of Constraints:')
          constraints_count=$(echo $raw_result | sed 's/.*Constraints: //' | sed 's/[^0-9]*//g')
          echo "ADJUSTED_COUNT=$constraints_count" >> $GITHUB_ENV

      - name: Ceremony - Find least power of 2 larger than number of constraints
        id: power_of_2
        run: |
          ADJUSTED_COUNT=${{ env.ADJUSTED_COUNT }}
          POWER_OF_2=2
          EXPONENT=1
          while [ $POWER_OF_2 -le $ADJUSTED_COUNT ]; do
            POWER_OF_2=$((POWER_OF_2 * 2))
            EXPONENT=$((EXPONENT + 1))
          done
          echo "POWER_OF_2=$EXPONENT" >> $GITHUB_ENV

      - name: Ceremony - Cache ppot ptau
        id: cache-ptau
        uses: actions/cache@v4
        with:
          path: out/ppot_0080_${{ env.POWER_OF_2 }}.ptau
          key: ${{ env.POWER_OF_2 }}

      - name: Ceremony - Download ppot ptau
        if: steps.cache-ptau.outputs.cache-hit != 'true'
        run: |
          cd out
          curl -O https://pse-trusted-setup-ppot.s3.eu-central-1.amazonaws.com/pot28_0080/ppot_0080_${{ env.POWER_OF_2 }}.ptau

      - name: Ceremony - Ceremony Phase 2
        run: |
          cd out
          npx snarkjs groth16 setup ${{ matrix.circuit_name }}.r1cs ppot_0080_${{ env.POWER_OF_2 }}.ptau ${{ matrix.circuit_name }}_0000.zkey
          npx snarkjs zkey contribute ${{ matrix.circuit_name }}_0000.zkey ${{ matrix.circuit_name }}_0001.zkey --name="1st Contributor Name" -v -e="Some random text"
          npx snarkjs zkey export verificationkey ${{ matrix.circuit_name }}_0001.zkey verification_key.json

      - name: Ceremony - Zip files
        run: |
          mkdir -p zipfiles
          zip -j -r zipfiles/${{ matrix.circuit_name }}-keys-${{ env.VERSION }}.zip \
          out/${{ matrix.circuit_name }}_0001.zkey \
          out/verification_key.json

      - name: Ceremony - Upload zkey to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zipfiles/${{ matrix.circuit_name }}-keys-${{ env.VERSION }}.zip
          asset_name: ${{ matrix.circuit_name }}-keys-${{ env.VERSION }}.zip
          tag: ${{ github.ref }}
